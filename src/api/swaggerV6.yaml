openapi: 3.0.0
info:
  title: Governify Registry
  description: Governify Registry API
  version: '6'
  termsOfService: www.isa.us.es
  contact:
    name: ISA Research Group
    url: www.isa.us.es
    email: isagroup.us@gmail.com
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'

servers:
  - url: /api/v6
    description: Development server
  - url: https://registry.governify.io/api/v6
    description: Production server

tags:
  - name: template-registry
    description: Template registry operations
  - name: agreement-registry
    description: Agreement registry operations
  - name: agreement-states
    description: Agreement states operations
  - name: guarantees-states
    description: Guarantees states operations
  - name: metrics-states
    description: Metrics states operations
  - name: pricings-states
    description: Pricing states operations
  - name: quotas-states
    description: Quotas states operations
  - name: rates-states
    description: Rates states operations
  - name: bills
    description: Bills operations

paths:
  /templates:
    get:
      tags:
        - template-registry
      summary: Get all templates
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    post:
      tags:
        - template-registry
      summary: Create a new template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '200':
          description: Template created successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
  /templates/{templateId}:
    get:
      tags:
        - template-registry
      summary: Get a template by ID
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    delete:
      tags:
        - template-registry
      summary: Delete a template by ID
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Template deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
  /agreements:
    get:
      tags:
        - agreement-registry
      summary: Get all agreements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agreement'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    post:
      tags:
        - agreement-registry
      summary: Create a new agreement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agreement'
      responses:
        '200':
          description: Agreement created successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    delete:
      tags:
        - agreement-registry
      summary: Delete all agreements
      responses:
        '200':
          description: Agreements deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agreement'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
  /agreements/{agreementId}:
    get:
      tags:
        - agreement-registry
      summary: Get an agreement by ID
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    delete:
      tags:
        - agreement-registry
      summary: Delete an agreement by ID
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Agreement deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /states:
    delete:
      tags:
        - agreement-states
      description: XXX
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /states/{agreementId}:
    get:
      tags:
        - agreement-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgreementState'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - agreement-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/filtered:
    get:
      tags:
        - agreement-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
        - name: indicator
          in: query
          description: State identifier.
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: The state type.
          required: false
          schema:
            type: string
        - name: from
          in: query
          description: Start date for filtering.
          required: false
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: End date for filtering.
          required: false
          schema:
            type: string
            format: date-time
        - name: at
          in: query
          description: A specific timestamp for filtering.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
  /states/{agreementId}/overrides:
    delete:
      tags:
        - agreement-states
      description: Delete all overrides for one agreement
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'
      x-swagger-router-controller: OverrideRegistry

  /states/{agreementId}/metrics:
    get:
      tags:
        - metrics-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsState'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/metrics/{metricId}:
    get:
      tags:
        - metrics-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
        - name: metricId
          in: path
          description: XXX
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricState'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      tags:
        - metrics-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
        - name: metricId
          in: path
          description: XXX
          required: true
          schema:
            type: string
      requestBody:
        description: XXX
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricState'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/metrics/{metricId}/increase:
    post:
      tags:
        - metrics-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          schema:
            type: string
        - name: metricId
          in: path
          description: XXX
          required: true
          schema:
            type: string
      requestBody:
        description: XXX
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricState'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/guarantees:
    get:
      tags:
        - guarantees-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GuaranteeState'
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'
  /states/{agreementId}/guarantees/{guaranteeId}:
    get:
      tags:
        - guarantees-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
        - name: guaranteeId
          in: path
          description: XXX
          required: true
          type: string
        - name: from
          in: query
          description: XXX
          required: false
          type: string
        - name: to
          in: query
          description: XXX
          required: false
          type: string
        - name: forceUpdate
          in: query
          description: XXX
          required: false
          type: boolean
        - name: lasts
          in: query
          description: XXX
          required: false
          type: integer
        - name: withNoEvidences
          in: query
          description: XXX
          required: false
          type: boolean
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GuaranteeState'
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/guarantees/{guaranteeId}/overrides:
    get:
      tags:
        - guarantees-states
      summary: Get overrides for an agreement and guarantee
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
        - name: guaranteeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Override'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    post:
      tags:
        - guarantees-states
      summary: Add an override to an agreement and guarantee
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
        - name: guaranteeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Override'
      responses:
        '200':
          description: Override added successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    delete:
      tags:
        - guarantees-states
      summary: Delete an override from an agreement and guarantee
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
        - name: guaranteeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Override'
      responses:
        '200':
          description: Override deleted successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
  /states/{agreementId}/pricing/billing/penalties:
    get:
      tags:
        - pricings-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/components/schemas/GuaranteesState'
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/quotas:
    get:
      tags:
        - quotas-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/components/schemas/QuotasState'
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'
  /states/{agreementId}/quotas/{quotaId}:
    get:
      tags:
        - quotas-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
        - name: quotaId
          in: path
          description: XXX
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/components/schemas/QuotaState'
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'

  /states/{agreementId}/rates:
    get:
      tags:
        - rates-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/components/schemas/RatesState'
        '400':
          description: Bad request
          schema:
            $ref: '#/components/schemas/ErrorModel'
  /states/{agreementId}/rates/{rateId}:
    get:
      tags:
        - rates-states
      description: XXX
      parameters:
        - name: agreementId
          in: path
          description: Agreement identifier.
          required: true
          type: string
        - name: rateId
          in: path
          description: XXX
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/components/schemas/RateState'

  /bills/{agreementId}:
    get:
      tags:
        - bills
      summary: Get all bills for an agreement
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
        - name: to
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    
    delete:
      tags:
        - bills
      summary: Remove all bills for an agreement
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Bills deleted successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
  /bills/{agreementId}/{billId}:
    put:
      tags:
        - bills
      summary: Update a bill's state
      parameters:
        - name: agreementId
          in: path
          required: true
          schema:
            type: string
        - name: billId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          description: Bill updated successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  
components:
  schemas:
    Query:
      type: object

    Template:
      type: object
    
    Agreement:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        type:
          type: string
        context:
          $ref: '#/components/schemas/Context'
        terms:
          $ref: '#/components/schemas/Terms'
    
    Context:
      type: object
      properties:
        provider:
          type: string
        consumer:
          type: string
        validity:
          $ref: '#/components/schemas/Validity'
        definitions:
          $ref: '#/components/schemas/Definitions'
        infrastructure:
          $ref: '#/components/schemas/Infrastructure'
    
    Validity:
      type: object
      required:
        - initial
        - timeZone
      properties:
        initial:
          type: string
        timeZone:
          type: string
        end:
          type: string
    
    Infrastructure:
      type: object
    
    Schema:
      type: object
    
    Scope:
      type: object
    
    Log:
      type: object
    
    Terms:
      type: object
      properties:
        guarantees:
          type: array
          items:
            $ref: '#/components/schemas/Guarantee'
        configurations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Configuration'
        metrics:
          $ref: '#/components/schemas/Metrics'
        pricing:
          $ref: '#/components/schemas/Pricing'
        quotas:
          $ref: '#/components/schemas/Quotas'
        rates:
          $ref: '#/components/schemas/Rates'
    
    Configuration:
      type: object
      properties:
        scope:
          type: object
        of:
          type: array
          items:
            $ref: '#/components/schemas/ScopedConfiguration'
    
    ScopedConfiguration:
      type: object
      properties:
        scope:
          type: object
        value:
          type: string
    
    Guarantee:
      type: object
      properties:
        id:
          type: string
        scope:
          $ref: '#/components/schemas/GuaranteeScope'
        of:
          type: array
          items:
            $ref: '#/components/schemas/ScopedGuarantee'
    
    GuaranteeScope:
      type: object
    
    ScopedGuarantee:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/GuaranteeScope'
        objective:
          type: string
        with:
          type: object
        window:
          type: object
        evidences:
          type: array
          items:
            type: object
        penalties:
          type: array
          items:
            type: object
        rewards:
          type: array
          items:
            type: object
      
    ErrorModel:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Metrics:
      type: object
    
    Pricing:
      type: object
      properties:
        cost:
          type: number
          format: double
        currency:
          type: string
        billing:
          $ref: '#/components/schemas/Billing'
    
    Billing:
      type: object
      properties:
        period:
          type: string
        initial:
          type: string
        penalties:
          type: array
          items:
            $ref: '#/components/schemas/Compensation'
        rewards:
          type: array
          items:
            $ref: '#/components/schemas/Compensation'

    Quotas:
      type: array
      items:
        $ref: '#/components/schemas/Quota'

    Rates:
      type: object

    Bill:
      type: object
      properties:
        agreementId:
          type: string
        billId:
          type: string
        period:
          ref: '#/components/schemas/Period'
        state:
          type: string
        closeDate:
          type: string

    Definitions:
      type: object
      properties:
        schemas:
          type: object
        scopes:
          type: object
        logs:
          type: object

    Quota:
      type: object
      properties:
        id:
          type: string
        scope:
          type: object
        over:
          type: object
        of:
          type: array
          items:
            $ref: '#/components/schemas/ScopedQuota'

    ScopedQuota:
      type: object
      properties:
        scope:
          type: object
        limits:
          type: array
          items:
            $ref: '#/components/schemas/Limit'
      
    Limit:
      type: object
      properties:
        max:
          type: number
        period:
          type: string

    Override:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/Scope'
        period:
          $ref: '#/components/schemas/Period'
        id:
          type: integer
        evidences:
          type: object
        comment:
          type: string

    Compensation:
      type: object
      properties:
        over:
          $ref: '#/components/schemas/Over'
        of:
          type: array
          items:
            $ref: '#/components/schemas/CompensationOf'
        aggegatedBy:
          type: string
        groupBy:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GroupByObj'

    Over:
      type: object
    
    CompensationOf:
      type: object
      properties:
        value:
          type: string
        condition:
          type: string
      
    GroupByObj:
      type: object
    
    Period:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
    
    AgreementState:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
      
    MetricsState:
      type: object
      properties:
        id:
          type: string
        metrics:
          type: array
          items:
            type: string
    MetricState:
      type: object
      properties:
        id:
          type: string
        value:
          type: integer

    GuaranteeState:
      type: object
      properties:
        guarantee:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        logs:
          $ref: '#/components/schemas/Log'
        period:
          $ref: '#/components/schemas/Period'
        evidences:
          type: array
          items:
            $ref: '#/components/schemas/EvidenceState'
        fulfilled:
          type: boolean
        penalties:
          $ref: '#/components/schemas/PenaltyState'
    
    EvidenceState:
      type: object
      properties:
        evidence:
          type: boolean
        issue_init:
          type: string
        issue_end:
          type: string
        issue_duration:
          type: string
      
    PenaltyState:
      type: object

    GuaranteesState:
      type: object

    QuotasState:
      type: object
    
    QuotaState:
      type: object

    RatesState:
      type: object

    RateState:
      type: object